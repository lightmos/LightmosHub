syntax = "proto3";

package lightmos.restaking;

import "cosmos_proto/cosmos.proto";
import "lightmos/restaking/coin.proto";
import "lightmos/restaking/restaking.proto";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

option go_package = "lightmos/x/restaking/types";

message RestakingPacketData {
  oneof packet {
    NoData               noData           = 1;
    CreatePairPacketData createPairPacket = 2;
    SellOrderPacketData  sellOrderPacket  = 3;
    BuyOrderPacketData   buyOrderPacket   = 4;
    RestakePacketData    restakePacket    = 5;
  }
}

message NoData {}

// CreatePairPacketData defines a struct for the packet payload
message CreatePairPacketData {
  string sourceDenom = 1;
  string targetDenom = 2;
}

// CreatePairPacketAck defines a struct for the packet acknowledgment
message CreatePairPacketAck {}

// SellOrderPacketData defines a struct for the packet payload
message SellOrderPacketData {
  string amountDenom = 1;
  int32  amount      = 2;
  string priceDenom  = 3;
  int32  price       = 4;
  string seller = 5;
}

// SellOrderPacketAck defines a struct for the packet acknowledgment
message SellOrderPacketAck {
  int32 remainingAmount = 1;
  int32 gain            = 2;
}

// BuyOrderPacketData defines a struct for the packet payload
message BuyOrderPacketData {
  string amountDenom = 1;
  int32  amount      = 2;
  string priceDenom  = 3;
  int32  price       = 4;
  string buyer = 5;
}

// BuyOrderPacketAck defines a struct for the packet acknowledgment
message BuyOrderPacketAck {
  int32 remainingAmount = 1;
  int32 purchase        = 2;
}

message RestakePacketData{
  lightmos.restaking.Description     description         = 1 [(gogoproto.nullable) = false];
  lightmos.restaking.CommissionRates commission          = 2 [(gogoproto.nullable) = false];
  string          min_self_delegation = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
  string                   delegator_address = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   pubkey            = 6 ;
  lightmos.restaking.Coin value              = 7 [(gogoproto.nullable) = false];
  string  restaker = 8 ;
}
message RestakePacketDataAck{
  bool succeed = 1 ;
}