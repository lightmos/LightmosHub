syntax = "proto3";

package lightmos.restaking;

import "lightmos/base/coin.proto";

option go_package = "lightmos/x/restaking/types";

message RestakingPacketData {
  oneof packet {
    NoData                noData            = 1;
    CreatePairPacketData  createPairPacket  = 2;
    SellOrderPacketData   sellOrderPacket   = 3;
    BuyOrderPacketData    buyOrderPacket    = 4;
    RetireSharePacketData retireSharePacket = 5;
  }
}

message NoData {}

// CreatePairPacketData defines a struct for the packet payload
message CreatePairPacketData {
  string sourceDenom = 1;
  string targetDenom = 2;
}

// CreatePairPacketAck defines a struct for the packet acknowledgment
message CreatePairPacketAck {}

// SellOrderPacketData defines a struct for the packet payload
message SellOrderPacketData {
  string amountDenom = 1;
  int32  amount      = 2;
  string priceDenom  = 3;
  int32  price       = 4;
  string seller      = 5;
}

// SellOrderPacketAck defines a struct for the packet acknowledgment
message SellOrderPacketAck {
  int32 remainingAmount = 1;
  int32 gain            = 2;
}

// BuyOrderPacketData defines a struct for the packet payload
message BuyOrderPacketData {
  string amountDenom = 1;
  int32  amount      = 2;
  string priceDenom  = 3;
  int32  price       = 4;
  string buyer       = 5;
}

// BuyOrderPacketAck defines a struct for the packet acknowledgment
message BuyOrderPacketAck {
  int32 remainingAmount = 1;
  int32 purchase        = 2;
}

// RetireSharePacketData defines a struct for the packet payload
message RetireSharePacketData {
  string validatorAddress = 1;
  lightmos.base.Coin amount = 2;
}

// RetireSharePacketAck defines a struct for the packet acknowledgment
message RetireSharePacketAck {
  string  validatorAddress = 1;
  int32 step = 2;
}

